@prefix :       <http://hl7.org/fhir/> .
@prefix xsd:    <http://www.w3.org/2001/XMLSchema#> .
@prefix rr:     <http://www.w3.org/ns/r2rml#>.

[] # person -> :Patient
    rr:logicalTable       [ rr:sqlQuery '''SELECT person.*, make_date(year_of_birth, month_of_birth, day_of_birth) AS birth_date, 
    LOWER(concept_name) AS gender FROM person, concept 
    WHERE person.gender_concept_id = concept.concept_id''' ] ;
    rr:subjectMap         [ rr:template "http://hl7.org/fhir/Patient/{person_id}" ] ;
    rr:predicateObjectMap [ a                            :Patient ;
                            :Resource.id                 [ :value [ rr:column "person_id" ] ] ;
                            :Patient.gender              [ :value [ rr:column "gender" ] ] ;
                            :Patient.birthDate           [ :value [ rr:column   "birth_date" ;
                                                                    rr:datatype xsd:date ] ] ; 
                            :Patient.address             [ rr:template "http://hl7.org/fhir/Location/{location_id}/Location.address" ] ; 
                            :Patient.generalPractitioner [ :link [ rr:template "http://hl7.org/fhir/Practitioner/{provider_id}" ] ] ;
                            :Patient.generalPractitioner [ :link [ rr:template "http://hl7.org/fhir/PractitionerRole/{provider_id}" ] ]; 
                          ] .

[] # provider -> :Practitioner
    rr:logicalTable       [ rr:sqlQuery "SELECT *, make_date(year_of_birth, 1, 1) AS birth_date FROM provider" ] ;
    rr:subjectMap         [ rr:template "http://hl7.org/fhir/Practitioner/{provider_id}" ] ;
    rr:predicateObjectMap [ a                           :Practitioner ;
                            :Resource.id                [ :value [ rr:column "provider_id" ] ] ;
                            :Practitioner.identifier    [ :value [ rr:column "npi" ] ] ;
                            :Practitioner.name          [ :value [ rr:column "provider_name" ] ] ; # NOTE: always NULL in the DB
                            :Practitioner.birthDate     [ :value [ rr:column "birth_date" ] ] ; # NOTE: NULL since year_of_birth is always NULL
                            :Practitioner.qualification [ :Practitioner.qualification.identifier [ :Identifier.value [ :value [ rr:column "dea" ] ] ] ] ; ] .


[] # provider -> :Practitioner
    rr:logicalTable [ rr:sqlQuery '''SELECT provider.*, LOWER(concept_name) AS gender FROM provider, concept 
    WHERE provider.gender_concept_id = concept.concept_id'''] ; # NOTE: gender_concept_id is always NULL and this query is empty.
    rr:subjectMap         [ rr:template "http://hl7.org/fhir/Practitioner/{provider_id}" ] ;
    rr:predicateObjectMap [ :Practitioner.gender        [ :value [ rr:column "gender" ] ] ].


[] # provider -> :PractitionerRole
    rr:logicalTable       [ rr:tableName "provider" ] ;
    rr:subjectMap         [ rr:template "http://hl7.org/fhir/PractitionerRole/{provider_id}" ] ;
    rr:predicateObjectMap [ a                              :PractitionerRole ;
                            :Resource.id                   [ :value [ rr:column "provider_id" ] ] ;
                            :PractitionerRole.specialty    [ rr:termType rr:IRI ;
                                                             rr:template "http://hl7.org/fhir/CodeableConcept/{specialty_concept_id}"  ] ;
                            :PractitionerRole.location     [ rr:template "http://hl7.org/fhir/Location/{care_site_id}" ] ; 
                            :PractitionerRole.practitioner [ rr:template "http://hl7.org/fhir/Practitioner/{provider_id}" ] ; ] .


[] # care_site -> :Location
    rr:logicalTable       [ rr:tableName "care_site" ] ;
    rr:subjectMap         [ rr:template "http://hl7.org/fhir/Location/{care_site_id}" ] ;
    rr:predicateObjectMap [ a                 :Location ;
                            :Resource.id      [ :value [ rr:column "care_site_id" ] ] ;
                            :Location.name    [ :value [ rr:column "care_site_name" ] ] ;
                            :Location.type    [ rr:termType rr:IRI ;
                                                rr:template "http://hl7.org/fhir/CodeableConcept/{place_of_service_concept_id}"  ] ;
                            :Location.address [ rr:template "http://hl7.org/fhir/Location/{location_id}/Address" ] ; # NOTE: location_id is always NULL
                          ] .


#[] # care_site -> :Organization
#    rr:logicalTable       [ rr:tableName "care_site" ] ;
#    rr:subjectMap         [ rr:template "http://hl7.org/fhir/Organization/{care_site_id}" ] ;
#    rr:predicateObjectMap [ a                     :Location ;
#                            :Resource.id          [ :value [ rr:column "care_site_id" ] ] ;
#                            :Organization.name    [ :value [ rr:column "care_site_name" ] ] ;
#                            :Organization.type    [ :CodeableConcept.coding [ rr:termType rr:IRI ;
#                                                                              rr:template "http://hl7.org/fhir/Coding/{place_of_service_concept_id}" ] ] ;
#                            :Organization.address [ rr:template "http://hl7.org/fhir/Location/{location_id}/Address" ] ; # FIXME: location_id is always NULL
#                          ] .



[] # location -> :Location
    rr:logicalTable       [ rr:tableName "location" ] ;
    rr:subjectMap         [ rr:template "http://hl7.org/fhir/Location/{location_id}" ] ;
    rr:predicateObjectMap [ a                 :Location ;
                            :Resource.id      [ :value [ rr:column "location_id" ] ] ;
                            :Location.address [ a                   :Address ;
                                                :Address.line       [ :value [ rr:column "address_1" ] ] ;
                                                :Address.line       [ :value [ rr:column "address_2" ] ] ;
                                                :Address.city       [ :value [ rr:column "city" ] ] ;
                                                :Address.state      [ :value [ rr:column "state" ] ] ;
                                                :Address.postalCode [ :value [ rr:column "zip" ] ] ;
                                                :Address.country    [ :value [ rr:column "county" ] ] ; ] # TODO: the column name is county NOT country
                          ] .



[] # visit_occurrence -> :Encounter
    rr:logicalTable       [ rr:sqlQuery """SELECT * FROM visit_occurrence""" ] ;
    rr:subjectMap         [ rr:template "http://hl7.org/fhir/Encounter/{visit_occurrence_id}" ] ;
    rr:predicateObjectMap [ a                    :Encounter ;
                            :Resource.id         [ :value [ rr:column "visit_occurrence_id" ] ] ;
                            :Encounter.status    [ :value "finished" ] ; ## to be implemented
                            :Encounter.type      [ rr:termType rr:IRI ;
                                                   rr:template "http://hl7.org/fhir/CodeableConcept/{visit_concept_id}" ] ;
                            :Encounter.class     [ rr:termType rr:IRI ;
                                                   rr:template "http://hl7.org/fhir/CodeableConcept/{visit_type_concept_id}" ] ;
                            :Encounter.subject   [ :link [ rr:termType rr:IRI ;
                                                           rr:template "http://hl7.org/fhir/Patient/{person_id}" ] ] ;
                            :Encounter.period    [ :Period.start [ :value [ rr:column   "visit_start_datetime" ;
                                                                            rr:datatype xsd:dateTime ] ] ;
                                                   :Period.end   [ :value [ rr:column   "visit_end_datetime" ;
                                                                            rr:datatype xsd:dateTime ] ] ] ;
                            :Encounter.performer [ :link [ rr:termType rr:IRI ; # FIXME: :Encounter.performer not in the FHIR ontology 
                                                           rr:template "http://hl7.org/fhir/Practitioner/{provider_id}" ] ] ;
                            :Encounter.partOf    [ :link [ rr:termType rr:IRI ;
                                                           rr:template "http://hl7.org/fhir/Encounter/{preceding_visit_occurrence_id}" ] ] ; ] .

[] # condition_occurrence -> :Condition
    rr:logicalTable       [ rr:sqlQuery """SELECT * FROM condition_occurrence""" ] ;
    rr:subjectMap         [ rr:template "http://hl7.org/fhir/Condition/{condition_occurrence_id}" ] ;
    rr:predicateObjectMap [ a                            :Condition ;
                            :Resource.id                 [ :value [ rr:column "condition_occurrence_id" ] ] ;
                            :Condition.code              [ rr:termType rr:IRI ;
                                                           rr:template "http://hl7.org/fhir/CodeableConcept/{condition_concept_id}" ] ;
                            :Condition.category          [ rr:termType rr:IRI ;
                                                           rr:template "http://hl7.org/fhir/CodeableConcept/{condition_type_concept_id}" ] ;
                            :Condition.subject           [ :link [ rr:termType rr:IRI ;
                                                                   rr:template "http://hl7.org/fhir/Patient/{person_id}" ] ; ] ;
                            :Condition.encounter         [ :link [ rr:termType rr:IRI ;
                                                                   rr:template "http://hl7.org/fhir/Encounter/{visit_occurrence_id}" ] ] ;
                            :Condition.onsetDateTime     [ :value [ rr:column   "condition_start_datetime" ;
                                                                    rr:datatype xsd:dateTime ] ] ;
                            :Condition.abatementDateTime [ :value [ rr:column   "condition_end_datetime" ;
                                                                    rr:datatype xsd:dateTime ] ] ;
                            :Condition.asserter          [ :link [ rr:termType rr:IRI ;
                                                                   rr:template "http://hl7.org/fhir/Practitioner/{provider_id}" ] ] ; ] .


[] # condition_occurrence -> :Condition
    # NOTE: condition_status_concept_id is always NULL
    rr:logicalTable       [ rr:sqlQuery  """SELECT condition_occurrence.*, LOWER(concept_name) AS clinicalStatus FROM condition_occurrence, concept 
        WHERE condition_occurrence.condition_status_concept_id = concept.concept_id""" ] ;
    rr:subjectMap         [ rr:template "http://hl7.org/fhir/Condition/{condition_occurrence_id}" ] ;
    rr:predicateObjectMap [ a                            :Condition ;
                            :Condition.clinicalStatus     [ :value [ rr:column "clinicalStatus" ] ] ; 
                          ] .

[] # procedure_occurrence -> :Procedure
    rr:logicalTable       [ rr:sqlQuery  """SELECT * FROM procedure_occurrence""" ] ;
    rr:subjectMap         [ rr:template "http://hl7.org/fhir/Procedure/{procedure_occurrence_id}" ] ;
    rr:predicateObjectMap [ a                            :Procedure ;
                            :Resource.id                 [ :value [ rr:column "procedure_occurrence_id" ] ] ;
                            :Procedure.code              [ rr:termType rr:IRI ;
                                                           rr:template "http://hl7.org/fhir/CodeableConcept/{procedure_concept_id}" ] ;
                            :Procedure.category          [ rr:termType rr:IRI ;
                                                           rr:template "http://hl7.org/fhir/CodeableConcept/{procedure_type_concept_id}" ] ;
                            :Procedure.subject           [ :link [ rr:termType rr:IRI ;
                                                                   rr:template "http://hl7.org/fhir/Patient/{person_id}" ] ] ;
                            :Procedure.encounter         [ :link [ rr:termType rr:IRI ;
                                                           rr:template "http://hl7.org/fhir/Encounter/{visit_occurrence_id}" ] ];
                            :Procedure.performedDateTime [ :value [ rr:column   "procedure_datetime" ;
                                                                    rr:datatype xsd:dateTime ] ] ;
                            :Procedure.performer         [ :link [ rr:termType rr:IRI ;
                                                                   rr:template "http://hl7.org/fhir/Practitioner/{provider_id}" ] ] ; 
                          ] .

[] # drug_exposure -> :MedicationStatement
    rr:logicalTable       [ rr:sqlQuery """SELECT * FROM drug_exposure""" ] ;
    rr:subjectMap         [ rr:template "http://hl7.org/fhir/MedicationStatement/{drug_exposure_id}" ] ;
    rr:predicateObjectMap [ a                                              :MedicationStatement ;
                            :Resource.id                                   [ :value [ rr:column "drug_exposure_id" ] ] ;
                            :MedicationStatement.status                    [ :value "completed" ] ; 
                            :MedicationStatement.statusReason              [ :value [ rr:column "stop_reason" ] ] ; ## expect codeableConcept but ... ## TODO: stop_reason is always NULL
                            :MedicationStatement.medicationCodeableConcept [ rr:termType rr:IRI ;
                                                                             rr:template "http://hl7.org/fhir/CodeableConcept/{drug_concept_id}" ] ;
                            :MedicationStatement.category                  [ rr:termType rr:IRI ;
                                                                            rr:template "http://hl7.org/fhir/CodeableConcept/{drug_type_concept_id}"  ] ;
                            :MedicationStatement.subject                   [ :link [ rr:termType rr:IRI ;
                                                                             rr:template "http://hl7.org/fhir/Patient/{person_id}" ] ];
                            :MedicationStatement.context                   [ rr:termType rr:IRI ;
                                                                             rr:template "http://hl7.org/fhir/Encounter/{visit_occurrence_id}" ] ;
                            :MedicationStatement.effectiveDateTime         [ :value [ rr:column   "drug_exposure_start_datetime" ;
                                                                                          rr:datatype xsd:dateTime ] ] ;
                            :MedicationStatement.effectivePeriod           [ :Period.start [ :value [ rr:column   "drug_exposure_start_datetime" ;
                                                                                                      rr:datatype xsd:dateTime ] ] ;
                                                                             :Period.end   [ :value [ rr:column   "drug_exposure_end_datetime" ;
                                                                                                      rr:datatype xsd:dateTime ] ] ] 
                          ] .

[] # measurement -> :Observation
    rr:logicalTable       [ rr:sqlQuery """SELECT * FROM measurement""" ] ;
    rr:subjectMap         [ rr:template "http://hl7.org/fhir/Observation/{measurement_id}" ] ;
    rr:predicateObjectMap [ a                                 :Observation ;
                            :Resource.id                      [ :value [ rr:column "measurement_id" ] ] ;
                            :Observation.status               [ :value "final"];
                            :Observation.code                 [ rr:termType rr:IRI ;
                                                                rr:template "http://hl7.org/fhir/CodeableConcept/{measurement_concept_id}" ] ;
                            :Observation.category             [ rr:termType rr:IRI ;
                                                                rr:template "http://hl7.org/fhir/CodeableConcept/{measurement_type_concept_id}" ] ;
                            :Observation.subject              [ :link [ rr:termType rr:IRI ;
                                                                rr:template "http://hl7.org/fhir/Patient/{person_id}" ] ];
                            :Observation.encounter            [ :link [ rr:termType rr:IRI ;
                                                                rr:template "http://hl7.org/fhir/Encounter/{visit_occurrence_id}" ] ];
                            :Observation.effectiveDateTime    [ :value [ rr:column   "measurement_datetime" ;
                                                                         rr:datatype xsd:dateTime ] ] ;
                            :Observation.effectivePeriod      [ :Period.start [ :value [ rr:column   "measurement_datetime" ;
                                                                             rr:datatype xsd:dateTime ] ] ] ;
                            :Observation.valueCodeableConcept [ rr:termType rr:IRI ;
                                                                rr:template "http://hl7.org/fhir/CodeableConcept/{value_as_concept_id}" ] ;
                            :Observation.valueString          [ :value [ rr:column   "value_as_number" ;
                                                                         rr:datatype xsd:string ] ] ;
                            :Observation.referenceRange       [ :Observation.referenceRange.low  [ :value [ rr:column "range_low" ] ] ;
                                                                :Observation.referenceRange.high [ :value [ rr:column "range_high" ] ] ] ;
                            :Observation.performer            [ :link [ rr:termType rr:IRI ;
                                                                rr:template "http://hl7.org/fhir/Practitioner/{provider_id}" ] ]; 
                          ] .

[] # measurement.unit_concept_id -> :Observation.valueQuantity
    rr:logicalTable       [ rr:sqlQuery
                                    """SELECT measurement.*, concept_name AS measurement_unit FROM measurement, concept 
                                    WHERE measurement.unit_concept_id = concept.concept_id""" ] ;
    rr:subjectMap         [ rr:template "http://hl7.org/fhir/Observation/{measurement_id}" ] ;
    rr:predicateObjectMap [ :Observation.valueQuantity        [ :Quantity.value [ :value [ rr:column "value_as_number" ; rr:datatype xsd:decimal ] ] ;
                                                                :Quantity.unit  [ :value [ rr:column "measurement_unit" ; rr:datatype xsd:string  ] ] ] ;
                          ] .


[ ] # concept -> :CodeableConcept
    rr:logicalTable       [ rr:tableName "concept" ] ;
    rr:subjectMap         [ rr:template "http://hl7.org/fhir/CodeableConcept/{concept_id}" ] ;
    rr:predicateObjectMap [ a                       :CodeableConcept ;
                            :CodeableConcept.coding [ a               :Coding ;
                                                      :Coding.code    [ :value [ rr:column   "concept_code" ;
                                                                                 rr:datatype xsd:string ] ] ;
                                                      :Coding.display [ :value [ rr:column   "concept_name" ;
                                                                                 rr:datatype xsd:string ] ] ;
                                                      :Coding.system  [ :value [ rr:column   "vocabulary_id" ;
                                                                                 rr:datatype xsd:string ] ] ; ] ;
                            :CodeableConcept.text   [ :value [ rr:column   "concept_name" ;
                                                               rr:datatype xsd:string ] ] ; ] .

# [ ] # concept -> :Coding
#    rr:logicalTable       [ rr:tableName "concept" ] ;
#    rr:subjectMap         [ rr:template "http://hl7.org/fhir/Coding/{concept_id}" ] ;
#    rr:predicateObjectMap [ a               :Coding ;
#                            :Resource.id    [ :value [ rr:column   "concept_id" ;
#                                                       rr:datatype xsd:string ] ] ;
#                            :Coding.code    [ :value [ rr:column   "concept_code" ;
#                                                       rr:datatype xsd:string ] ] ;
#                            :Coding.display [ :value [ rr:column   "concept_name" ;
#                                                       rr:datatype xsd:string ] ] ;
#                            :Coding.system  [ :value [ rr:column   "vocabulary_id" ;
#                                                      rr:datatype xsd:string ] ] ; ] .


[ ] # concept_relationship -> :ConceptMap
    rr:logicalTable       [ rr:tableName "concept_relationship" ] ;
    rr:subjectMap         [ rr:template "http://hl7.org/fhir/ConceptMap/relations/{concept_id_1}/{concept_id_2}" ] ;
    rr:predicateObjectMap [ a                                            :ConceptMap ;
                            :Resource.id                                 [ :value [ rr:template "{concept_id_1}-{concept_id_2}" ; 
                                                                                    rr:datatype xsd:string ] ] ;
                            :ConceptMap.sourceUri                        [ rr:termType rr:IRI ;
                                                                           rr:template "http://hl7.org/fhir/CodeableConcept/{concept_id_1}" ] ;
                            :ConceptMap.targetUri                        [ rr:termType rr:IRI ;
                                                                           rr:template "http://hl7.org/fhir/CodeableConcept/{concept_id_2}" ] ;
                            :ConceptMap.group.source                     [ rr:termType rr:IRI ;
                                                                           rr:template "http://hl7.org/fhir/CodeableConcept/{concept_id_1}" ] ;
                            :ConceptMap.group.target                     [ rr:termType rr:IRI ;
                                                                           rr:template "http://hl7.org/fhir/CodeableConcept/{concept_id_2}" ] ;
                            :ConceptMap.group.element.target.equivalence [ :value [ rr:column   "relationship_id" ;
                                                                                    rr:datatype xsd:string ] ] ; 
                          ] .

[ ] # concept_ancestor -> :ConceptMap
    rr:logicalTable       [ rr:tableName "concept_ancestor" ] ;
    rr:subjectMap         [ rr:template "http://hl7.org/fhir/ConceptMap/ancestors/{ancestor_concept_id}/{descendant_concept_id}" ] ;
    rr:predicateObjectMap [ a                                            :ConceptMap ;
                            :Resource.id                                 [ :value [ rr:template "{ancestor_concept_id}-{descendant_concept_id}" ; 
                                                                                    rr:datatype xsd:string ] ] ;
                            :ConceptMap.sourceUri                        [ rr:termType rr:IRI ;
                                                                           rr:template "http://hl7.org/fhir/CodeableConcept/{ancestor_concept_id}" ] ;
                            :ConceptMap.targetUri                        [ rr:termType rr:IRI ;
                                                                           rr:template "http://hl7.org/fhir/CodeableConcept/{descendant_concept_id}" ] ;
                            :ConceptMap.group.source                     [ rr:termType rr:IRI ;
                                                                           rr:template "http://hl7.org/fhir/CodeableConcept/{ancestor_concept_id}" ] ;
                            :ConceptMap.group.target                     [ rr:termType rr:IRI ;
                                                                           rr:template "http://hl7.org/fhir/CodeableConcept/{descendant_concept_id}" ] ;
                            :ConceptMap.group.element.target.equivalence [ :value      "subsumes" ;
                                                                           rr:datatype xsd:string ] ; ] .